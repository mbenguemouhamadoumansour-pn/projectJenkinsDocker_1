pipeline {
    agent any

    environment {
        // Identifiants DockerHub
        DOCKERHUB_USERNAME = 'mouhamadoumbengue'
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-jenkins')

        // Noms des images Docker
        FRONTEND_IMAGE = "${DOCKERHUB_USERNAME}/sama-frontend"
        BACKEND_IMAGE = "${DOCKERHUB_USERNAME}/sama-backend"

        // Num√©ro du build Jenkins
        BUILD_TAG = "${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'üì¶ R√©cup√©ration du code depuis GitHub...'
                checkout scm
            }
        }

        stage('Install Dependencies') {
            parallel {
                stage('Backend Dependencies') {
                    steps {
                        dir('backend') {
                            echo '‚öôÔ∏è Installation des d√©pendances backend...'
                            sh 'npm install'
                        }
                    }
                }
                stage('Frontend Dependencies') {
                    steps {
                        dir('frontend') {
                            echo '‚öôÔ∏è Installation des d√©pendances frontend...'
                            sh 'npm install'
                        }
                    }
                }
            }
        }

        stage('Run Tests') {
            parallel {
                stage('Test Backend') {
                    steps {
                        dir('backend') {
                            echo 'üß™ Tests backend...'
                            sh 'npm test || echo "‚ö†Ô∏è Aucun test configur√© pour le backend"'
                        }
                    }
                }
                stage('Test Frontend') {
                    steps {
                        dir('frontend') {
                            echo 'üß™ Tests frontend...'
                            sh 'CI=true npm test || echo "‚ö†Ô∏è Aucun test configur√© pour le frontend"'
                        }
                    }
                }
            }
        }

        stage('Build Docker Images') {
            parallel {
                stage('Build Backend Image') {
                    steps {
                        dir('backend') {
                            echo "üèóÔ∏è Construction de l'image backend..."
                            sh "docker build -t ${BACKEND_IMAGE}:${BUILD_TAG} ."
                            sh "docker tag ${BACKEND_IMAGE}:${BUILD_TAG} ${BACKEND_IMAGE}:latest"
                        }
                    }
                }
                stage('Build Frontend Image') {
                    steps {
                        dir('frontend') {
                            echo "üèóÔ∏è Construction de l'image frontend..."
                            sh "docker build -t ${FRONTEND_IMAGE}:${BUILD_TAG} ."
                            sh "docker tag ${FRONTEND_IMAGE}:${BUILD_TAG} ${FRONTEND_IMAGE}:latest"
                        }
                    }
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                echo 'üöÄ Connexion √† DockerHub...'
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'

                echo 'üì§ Push des images vers DockerHub...'
                sh "docker push ${BACKEND_IMAGE}:${BUILD_TAG}"
                sh "docker push ${BACKEND_IMAGE}:latest"
                sh "docker push ${FRONTEND_IMAGE}:${BUILD_TAG}"
                sh "docker push ${FRONTEND_IMAGE}:latest"

                echo '‚úÖ Images publi√©es sur DockerHub avec succ√®s!'
            }
        }
    }

    post {
        success {
            echo 'üéâ Pipeline termin√© avec succ√®s!'
            mail to: 'mbenguemouhamadoumansour@gmail.com',
                 subject: "‚úÖ Succ√®s du pipeline ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: """
Bonjour Mouhamadou üëã,

Le pipeline **${env.JOB_NAME}** s'est termin√© **avec succ√®s** üéâ

üìò D√©tails :
- Num√©ro du build : ${env.BUILD_NUMBER}
- Projet : ${env.JOB_NAME}
- URL du build : ${env.BUILD_URL}

Cordialement,
Jenkins ü§ñ
                 """
        }

        failure {
            echo '‚ùå Le pipeline a √©chou√©!'
            mail to: 'mbenguemouhamadoumansour@gmail.com',
                 subject: "‚ùå √âchec du pipeline ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: """
Bonjour Mouhamadou,

Le pipeline **${env.JOB_NAME}** a √©chou√© ‚ùóÔ∏è

Merci de consulter la console Jenkins pour plus de d√©tails :
${env.BUILD_URL}

Cordialement,
Jenkins üö®
                 """
        }

        always {
            echo 'üßπ Nettoyage des images locales...'
            sh """
                docker rmi ${BACKEND_IMAGE}:${BUILD_TAG} || true
                docker rmi ${BACKEND_IMAGE}:latest || true
                docker rmi ${FRONTEND_IMAGE}:${BUILD_TAG} || true
                docker rmi ${FRONTEND_IMAGE}:latest || true
            """
            sh 'docker logout'
        }
    }
}
